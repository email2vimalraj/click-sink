version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.5.1
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: kafka:9092
      SERVER_LISTEN_ADDRESS: 0.0.0.0:8080
      CONSOLE_SERVE_STATIC: "true"

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
    ports:
      - "8123:8123" # HTTP
      - "9000:9000" # Native
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: sink
      POSTGRES_PASSWORD: sink
      POSTGRES_DB: click_sink
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:8.12
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  click-sink-api:
    build:
      context: ..
      dockerfile: Dockerfile
    command:
      [
        "api",
        "--store=pg",
        "--pg-dsn=postgres://sink:sink@postgres:5432/click_sink?sslmode=disable",
        "--listen=:8081",
      ]
    environment:
      - PORT=8081
      - KAFKA_DEBUG=1
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - clickhouse
      - postgres

  click-sink-worker:
    build:
      context: ..
      dockerfile: Dockerfile
    command:
      [
        "worker",
        "--store=pg",
        "--pg-dsn=postgres://sink:sink@postgres:5432/click_sink?sslmode=disable",
      ]
    environment:
      - PORT_METRICS=2112
    depends_on:
      - kafka
      - clickhouse
      - postgres
    deploy:
      replicas: 2

  click-sink-ui:
    build:
      context: ..
      dockerfile: web/nextjs/Dockerfile
    environment:
      - NEXT_PUBLIC_API_BASE=/api
    depends_on:
      - click-sink-api

  nginx:
    image: nginx:1.27
    depends_on:
      - click-sink-api
      - click-sink-ui
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  clickhouse_data: {}
  pg_data: {}
