version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    ports:
      - "9000:9000" # Native TCP
      - "8123:8123" # HTTP
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  init-kafka:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - kafka
    entrypoint: ["/bin/bash", "-lc"]
    command: >
      until kafka-topics --bootstrap-server kafka:29092 --list >/dev/null 2>&1; do echo waiting for kafka; sleep 1; done; \
      kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --replication-factor 1 --partitions 1 --topic events; \
      sleep infinity

  seed-kafka:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - kafka
      - init-kafka
    entrypoint: ["/bin/bash", "-lc"]
    command: >
      set -euo pipefail; \
      until kafka-topics --bootstrap-server kafka:29092 --list >/dev/null 2>&1; do echo waiting for kafka; sleep 1; done; \
      for m in \
      '{"user":{"id":1,"email":"a@example.com"},"event":{"ts":"2025-10-05T12:00:00Z","type":"signup","value":1}}' \
      '{"user":{"id":2,"email":"b@example.com"},"event":{"ts":"2025-10-05T12:01:00Z","type":"purchase","value":23.5}}' \
      '{"user":{"id":3,"email":null},"event":{"ts":"2025-10-05T12:02:00Z","type":"page_view","value":null}}'; \
      do echo "$${m}" | kafka-console-producer --bootstrap-server kafka:29092 --topic events 1>/dev/null; echo "Produced: $${m}"; sleep 0.1; done

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.5.1
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: kafka:29092
      SERVER_LISTEN_ADDRESS: 0.0.0.0:8080
      CONSOLE_SERVE_STATIC: "true"

networks:
  default:
    name: click-sink-net
